<launch>

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find kuka_kr90_moveit_config)/default_warehouse_mongo_db" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find kuka_kr90_moveit_config)/launch/planning_context_workcell.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- If needed, broadcast static tf for robot root -->
  

  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
      <param name="publish_frequency" value="250" />

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find kuka_kr90_moveit_config)/launch/move_group_workcell.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find kuka_kr90_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find simtech_kuka_rsi_hw_interface)/config/hardware_controllers.yaml" command="load"/>
    <!-- Load standard kuka controller joint names from YAML file to parameter server -->
    <rosparam file="$(find simtech_kuka_rsi_hw_interface)/config/controller_joint_names.yaml" command="load"/>
    <!-- Load ethernate connection interface rosparameter server -->
    <rosparam file="$(find simtech_kuka_rsi_hw_interface)/config/rsi_interface_params.yaml" command="load"/>

    <!-- Load controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
        args="position_trajectory_controller joint_state_controller"/>    


    <!-- Start node without FT sensor -->
    <node name="simtech_kuka_rsi_hw_interface" pkg="simtech_kuka_rsi_hw_interface"
      type="simtech_kuka_rsi_hw_interface_node" respawn="false"
      output="screen"
      required="true"
      launch-prefix="nice -n -20"/>
      <!-- launch-prefix="nice -n -20" -->


  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find kuka_kr90_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>

</launch>
