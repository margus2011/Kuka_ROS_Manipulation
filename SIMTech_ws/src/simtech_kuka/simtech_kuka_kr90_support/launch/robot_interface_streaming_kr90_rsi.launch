<?xml version="1.0"?>
<!--
  Manipulator specific version of 'robot_interface_streaming.launch'.
  Defaults provided for KR 90 r2700:
   - 6 joints

  Usage:
    robot_interface_streaming_kr90.launch robot_ip:=<value>


  NOTE: this is a convenience wrapper launch file intended to emulate a
  typical ROS-Industrial robot support package variant specific 'robot
  interface streaming' setup. It depends on the main 'robot interface
  streaming' launch file provided by the kuka_rsi_hw_interface package.

  This emulation is not complete (see the robot_interface_streaming.launch
  file in the kuka_rsi_hw_interface package for more comments): starting
  this launch file on its own for instance does not work, while that is
  possible with industrial_robot_client-based ROS-Industrial drivers.
-->
<launch>
  <!--arg name="robot_ip" doc="IP of controller" /-->
  <arg name="robot_ip" doc="IP of the RSI interface on the controller" />
  <arg name="robot_port" default="49152" doc="UDP port the RSI interface on the controller is configured to use" />

  <!-- name of the ros_control controllers (see below) -->
  <arg name="js_ctrlr" value="joint_state_controller" />
  <arg name="pos_ctrlr_name" value="position_trajectory_controller" />
  
  <!-- other ROS-Industrial nodes may expect the 'robot_ip_address' parameter
       to be present -->
  <param name="robot_ip_address" type="str" value="$(arg robot_ip)" />  
  
  <!-- the hardware_interface node expects its parameters in the 'rsi' namespace -->
  <rosparam subst_value="true">
    rsi:
      address: $(arg robot_ip)
      port: $(arg robot_port)
  </rosparam>
  
  <!-- the ros_control controller configuration for the hardware_interface:
       this is typically loaded from the 'config/hardware_controller.yaml' file,
       but is recreated here to ensure a consistent configuration when using
       this convenience launch file -->
  <rosparam subst_value="true">
    $(arg js_ctrlr):
      type: joint_state_controller/JointStateController
      publish_rate: 50    

    # NOTE: these joint names MUST correspond to those specified in the
    #       'controller_joint_names' parameter (typically loaded by the
    #       calling launch file)
    $(arg pos_ctrlr_name):
      type: "position_controllers/JointTrajectoryController"
      joints:
        - joint_a1
        - joint_a2
        - joint_a3
        - joint_a4
        - joint_a5
        - joint_a6

      state_publish_rate: 50 # Defaults to 50
      action_monitor_rate: 20 # Defaults to 20
  </rosparam>      
  
  <!-- main 'driver node': the RSI hardware interface -->
  <group>
    <remap from="$(arg pos_ctrlr_name)/follow_joint_trajectory" to="/joint_trajectory_action" />
    <remap from="$(arg pos_ctrlr_name)/state" to="/feedback_states" />
    <remap from="$(arg pos_ctrlr_name)/command" to="/joint_path_command"/>

    <!-- Include the external launch file -->
    <include file="$(find simtech_kuka_rsi_hw_interface)/launch/simtech_kuka_rsi_hardware_interface.launch">
    </include>
  </group>
  
  <!-- spawn the actual controllers: note that the names of the controllers must
       correspond to those specified in the rosparam snippet above -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner"
    args="$(arg pos_ctrlr_name) $(arg js_ctrlr) --shutdown-timeout 1"
    respawn="false" output="screen" />
</launch>  


